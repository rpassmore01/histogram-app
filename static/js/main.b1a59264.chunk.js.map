{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Upload","props","state","file","redValues","blueValues","greenValues","imgCounter","handleChange","bind","updateValue","drawChart","resetSvg","event","target","files","this","setState","URL","createObjectURL","domain","d3","margin","width","height","svg","append","attr","x","range","call","histogram","thresholds","ticks","redBins","blueBins","greenBins","y","d","length","selectAll","data","enter","x0","x1","style","text","Jimp","read","err","img","localredValues","localgreenValues","localblueValues","i","bitmap","j","hex","getPixelColor","RGBA","intToRGBA","push","r","g","b","window","location","reload","className","type","onChange","id","for","onClick","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a59264.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport Jimp from 'jimp';\r\nimport * as d3 from \"d3\";\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      file: null,\r\n      redValues: [],\r\n      blueValues: [],\r\n      greenValues: [],\r\n      imgCounter: 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.updateValue = this.updateValue.bind(this)\r\n    this.drawChart = this.drawChart.bind(this)\r\n    this.resetSvg = this.resetSvg.bind(this)\r\n  }\r\n  handleChange(event) {\r\n\r\n    if(event.target.files[0] != null){\r\n      this.setState((state) => (\r\n        {\r\n          imgCounter: state.imgCounter + 1,\r\n          file: URL.createObjectURL(event.target.files[0])\r\n        }\r\n      ), () => {this.updateValue();})\r\n    }\r\n  }\r\n  drawChart() {\r\n    let min = d3.min(this.state.redValues);\r\n    let max = d3.max(this.state.redValues);\r\n    let domain = [min, max];\r\n\r\n    var margin = { top: 30, right: 30, bottom: 30, left: 50 },\r\n      width = 460 - margin.left - margin.right,\r\n      height = 400 - margin.top - margin.bottom;\r\n\r\n    var svg = d3.select(\".svg-div\")\r\n      .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n        .attr(\"transform\", \r\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    var x = d3.scaleLinear()\r\n      .domain(domain)\r\n      .range([0, width]);\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n    \r\n    var histogram = d3.histogram()\r\n      .domain(x.domain())\r\n      .thresholds(x.ticks(256));\r\n    \r\n    var redBins = histogram(this.state.redValues);\r\n    var blueBins = histogram(this.state.blueValues);\r\n    var greenBins = histogram(this.state.greenValues);\r\n    \r\n    var y = d3.scaleLinear()\r\n      .range([height, 0])\r\n      .domain([\r\n        0,\r\n        d3.max(blueBins, function(d) {\r\n          return d.length;\r\n        })\r\n      ]);\r\n\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    svg\r\n      .selectAll(\"rect\")\r\n      .data(redBins)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 1)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\r\n      })\r\n      .attr(\"width\", function(d) {\r\n        return x(d.x1) - x(d.x0) - 1;\r\n      })\r\n      .attr(\"height\", function(d) {\r\n        return height - y(d.length);\r\n      })\r\n      .style(\"fill\", \"red\")\r\n      .style(\"opacity\", \"0.6\");\r\n      \r\n    svg\r\n      .selectAll(\"rect2\")\r\n      .data(greenBins)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 1)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\r\n      })\r\n      .attr(\"width\", function(d) {\r\n        return x(d.x1) - x(d.x0) - 1;\r\n      })\r\n      .attr(\"height\", function(d) {\r\n        return height - y(d.length);\r\n      })\r\n      .style(\"fill\", \"green\")\r\n      .style(\"opacity\", \"0.6\");;\r\n\r\n    svg\r\n      .selectAll(\"rect3\")\r\n      .data(blueBins)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 1)\r\n      .attr(\"transform\", function(d) {\r\n        return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\r\n      })\r\n      .attr(\"width\", function(d) {\r\n        return x(d.x1) - x(d.x0) - 1;\r\n      })\r\n      .attr(\"height\", function(d) {\r\n        return height - y(d.length);\r\n      })\r\n      .style(\"fill\", \"blue\")\r\n      .style(\"opacity\", \"0.6\");\r\n\r\n    \r\n//draws axis titles\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"x label\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"x\", width)\r\n      .attr(\"y\", height)\r\n      .text(\"Pixel Value 0-255\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"y label\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"y\", 6)\r\n      .attr(\"dy\", \".75em\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .text(\"Pixel Count\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"y label\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"y\", 0 - (margin.top/ 2))\r\n      .attr(\"x\", (width / 2))\r\n      .text(\"Graph \" + this.state.imgCounter);\r\n      \r\n  }\r\n  updateValue() {\r\n    Jimp.read(this.state.file, (err, img) => {\r\n      let localredValues = [];\r\n      let localgreenValues = [];\r\n      let localblueValues = [];\r\n      for (let i = 0; i < img.bitmap.width; i++){\r\n        for (let j = 0; j < img.bitmap.height; j++){\r\n          let hex = img.getPixelColor(i, j);\r\n          let RGBA = Jimp.intToRGBA(hex);\r\n          localredValues.push(RGBA.r)\r\n          localgreenValues.push(RGBA.g)\r\n          localblueValues.push(RGBA.b)\r\n        }\r\n      }\r\n      this.setState({\r\n        redValues: localredValues,\r\n        blueValues: localblueValues,\r\n        greenValues: localgreenValues\r\n      })\r\n      this.drawChart();\r\n    })\r\n  }\r\n\r\n  resetSvg() {\r\n    window.location.reload();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"main-div\">\r\n        <h1>Histogram Web App</h1>\r\n        <p>Upload a photo to see a histogram for the image, or upload multiple to compare histograms.</p>\r\n        <input type=\"file\" onChange={this.handleChange} id=\"file-input\" className=\"file\"/>\r\n        <label for=\"file-input\">Select file</label>\r\n        <button onClick={this.resetSvg} className=\"reset-btn\">Reset</button>\r\n        <div className=\"photo-graph-div\">\r\n          <div className=\"img-div\">\r\n            {this.state.file == null ? <p>No Image Uploaded</p> :  <img src={this.state.file} />}\r\n          </div>\r\n\r\n          <div className=\"svg-div\"></div>\r\n\r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}